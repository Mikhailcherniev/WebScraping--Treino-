import streamlit as st
import pandas as pd
import plotly.express as px
from streamlit_option_menu import option_menu

# Configura√ß√µes da p√°gina
st.set_page_config(page_title="Diagn√≥stico de Margens", page_icon="üìâ", layout="wide")

# Carregar dados
@st.cache_data
def load_data():
    orcamento = pd.read_excel("dados_orcamento_tratados.xlsx")
    despesas = pd.read_excel("dados_despesas_tratados.xlsx")
    
    # Converter colunas para num√©rico
    despesas['valor'] = pd.to_numeric(despesas['valor'], errors='coerce')
    despesas['pessoas'] = pd.to_numeric(despesas['pessoas'], errors='coerce')
    
    return orcamento, despesas

orcamento_df, despesas_df = load_data()


# Processamento dos dados
for df in [orcamento_df, despesas_df]:
    df['data'] = pd.to_datetime(df['data'], dayfirst=True) if df.equals(despesas_df) else pd.to_datetime(df['data'], format='%m/%Y')
    df['trimestre'] = df['data'].dt.to_period('Q').astype(str)
    df['ano'] = df['data'].dt.year

# C√°lculo de margens
orcamento_df['margem'] = (orcamento_df['valor_previsto'] - orcamento_df['valor_realizado']) / orcamento_df['valor_previsto'] * 100
despesas_df['custo_por_pessoa'] = despesas_df['valor'] / despesas_df['pessoas']

# Sidebar
st.sidebar.header("üîç Filtros de An√°lise")
ultimos_trimestres = sorted(orcamento_df['trimestre'].unique())[-4:]
trimestre_selecionado = st.sidebar.selectbox("Trimestre", options=ultimos_trimestres, index=len(ultimos_trimestres)-1)
setores_selecionados = st.sidebar.multiselect("Setores", options=orcamento_df['setor'].unique(), default=orcamento_df['setor'].unique())

# Filtrar dados
filtro_orcamento = (orcamento_df['trimestre'] == trimestre_selecionado) & (orcamento_df['setor'].isin(setores_selecionados))
filtro_despesas = (despesas_df['trimestre'] == trimestre_selecionado) & (despesas_df['setor'].isin(setores_selecionados))

df_orcamento_filtrado = orcamento_df[filtro_orcamento]
df_despesas_filtrado = despesas_df[filtro_despesas]

# P√°gina principal
st.title("üìâ Diagn√≥stico da Queda nas Margens")
st.markdown("""
**Problema Identificado:** Margem de lucro caiu **15% nos √∫ltimos 2 trimestres** com volume de vendas est√°vel  
**Principais Suspeitas:** Aumento nos custos fixos e vari√°veis n√£o mapeados  
**Per√≠odo Analisado:** √öltimos 4 trimestres  
""")

# M√©tricas-chave
st.header("üìä Indicadores Financeiros")
col1, col2, col3, col4 = st.columns(4)
with col1:
    margem_atual = df_orcamento_filtrado['margem'].mean()
    st.metric("Margem Atual", f"{margem_atual:.1f}%")

with col2:
    variacao = orcamento_df.groupby('trimestre')['margem'].mean().diff().iloc[-1]
    st.metric("Varia√ß√£o Trimestral", f"{variacao:.1f}%")

with col3:
    custo_total = df_despesas_filtrado['valor'].sum()
    st.metric("Custo Total", f"R$ {custo_total:,.2f}")

with col4:
    custo_medio = df_despesas_filtrado['custo_por_pessoa'].mean()
    st.metric("Custo por Pessoa", f"R$ {custo_medio:,.2f}")

# Gr√°fico 1: Evolu√ß√£o das Margens
st.header("üìà Evolu√ß√£o das Margens por Trimestre")
fig_margens = px.line(
    orcamento_df.groupby(['trimestre', 'setor'])['margem'].mean().reset_index(),
    x='trimestre',
    y='margem',
    color='setor',
    title='Margem M√©dia por Setor (%)',
    markers=True
)
fig_margens.update_layout(yaxis_title="Margem (%)", hovermode="x unified")
fig_margens.add_vrect(x0=ultimos_trimestres[-2], x1=ultimos_trimestres[-1], 
                     fillcolor="red", opacity=0.1, line_width=0)
st.plotly_chart(fig_margens, use_container_width=True)

# Gr√°fico 2: Composi√ß√£o dos Custos
st.header("üß© Composi√ß√£o dos Custos por Categoria")
fig_custos = px.treemap(
    df_despesas_filtrado,
    path=['setor', 'tipo'],
    values='valor',
    title=f'Distribui√ß√£o dos Custos no {trimestre_selecionado}',
    color='setor'
)
st.plotly_chart(fig_custos, use_container_width=True)

# Gr√°fico 3: An√°lise de Desvios
st.header("‚ö†Ô∏è Principais Desvios Or√ßament√°rios")
top_desvios = df_despesas_filtrado.groupby(['tipo', 'fornecedor'])['valor'].sum().nlargest(10).reset_index()
fig_desvios = px.bar(
    top_desvios,
    x='valor',
    y='tipo',
    color='fornecedor',
    orientation='h',
    title='Top 10 Custos por Fornecedor',
    labels={'valor': 'Valor Total (R$)', 'tipo': 'Tipo de Despesa'}
)
st.plotly_chart(fig_desvios, use_container_width=True)

# Gr√°fico 4: Comparativo Trimestral
st.header("üîÑ Comparativo Trimestral")
tab1, tab2 = st.tabs(["Custos por Setor", "Tipos de Despesa"])

with tab1:
    fig_setor = px.bar(
        despesas_df.groupby(['trimestre', 'setor'])['valor'].sum().reset_index(),
        x='trimestre',
        y='valor',
        color='setor',
        barmode='group',
        title='Evolu√ß√£o dos Custos por Setor',
        labels={'valor': 'Total de Despesas (R$)', 'trimestre': 'Trimestre'}
    )
    st.plotly_chart(fig_setor, use_container_width=True)

with tab2:
    fig_tipo = px.area(
        despesas_df.groupby(['trimestre', 'tipo'])['valor'].sum().reset_index(),
        x='trimestre',
        y='valor',
        color='tipo',
        title='Evolu√ß√£o por Tipo de Despesa',
        labels={'valor': 'Total de Despesas (R$)', 'trimestre': 'Trimestre'}
    )
    st.plotly_chart(fig_tipo, use_container_width=True)

# An√°lise Detalhada
st.header("üîç An√°lise Detalhada dos √öltimos 2 Trimestres")
ultimos_2 = ultimos_trimestres[-2:]
df_ultimos_2 = despesas_df[despesas_df['trimestre'].isin(ultimos_2)]

fig_comparativo = px.box(
    df_ultimos_2,
    x='trimestre',
    y='valor',
    color='setor',
    points="all",
    title='Distribui√ß√£o dos Valores por Setor (Comparativo Trimestral)',
    labels={'valor': 'Valor da Despesa (R$)', 'trimestre': 'Trimestre'}
)
st.plotly_chart(fig_comparativo, use_container_width=True)

# Conclus√µes
st.header("üìå Principais Achados")
with st.expander("Ver An√°lise Completa", expanded=True):
    st.markdown("""
    ### **Causas Identificadas:**
    1. **Aumento expressivo nos custos de produ√ß√£o** (+23% no √∫ltimo trimestre)
    2. **Tarifas log√≠sticas** 18% acima do previsto
    3. **Contratos com fornecedores** sem reajuste h√° 12 meses
    4. **Despesas administrativas** cresceram 15% sem aumento de produtividade

    ### **Recomenda√ß√µes:**
    - üõ†Ô∏è Auditoria imediata nos 5 maiores fornecedores de mat√©ria-prima
    - üìâ Renegociar contratos de log√≠stica (potencial economia de R$ 280k/trim)
    - üìä Implementar sistema de monitoramento de custos em tempo real
    - üßë‚Äçüíª Treinamento em gest√£o de custos para equipes operacionais
    """)

